@inject IMyService myService
@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraSmall"
                   CloseButton="true"
                   DisableBackdropClick="true"
                   Position="DialogPosition.Center" />
<MudSnackbarProvider />
<CascadingValue Value="this">
    <MudLayout>
        <MudAppBar Elevation="4">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudAppBarSpacer />
            <LoginDisplay />
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Elevation="4">
            <MudDrawerHeader Style="padding-left: 67px;">
                <div class="d-flex justify-center">
                    <MudAvatar Image="/images/userdefault.png" Style="height:80px; width:80px;" Class="ma-2" />
                </div>
            </MudDrawerHeader>
            <MudNavMenu Class="mud-width-full">
                <MudDivider Class="my-2" />
                @{ string user = "/adminHome/" + Uid;
            <MudNavLink Href=@user Icon="@Icons.Material.Filled.Home">Company</MudNavLink> }

                <MudNavLink Icon="@Icons.Material.Filled.Money">Payments</MudNavLink>
                @{ if (Cid != null)
                    {
                        string company = "/menuadd/" + Cid;
            <MudNavLink Href=@company Icon="@Icons.Material.Filled.Home">Menus</MudNavLink>
        } }

            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            @Body
        </MudMainContent>
    </MudLayout>
</CascadingValue>
@code { public string Uid { get; set; }

    public string Cid { get; set; }
    private void RefreshMe()
    {

        StateHasChanged();
    }
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    protected override async Task OnInitializedAsync()
    {
        myService.RefreshRequested += RefreshMe;

    } }