@page "/login"
@layout LoginLayout
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<link href="css/responsive-full-background-image.css" rel="stylesheet" />
@*<MudProgressCircular Color="Color.Primary" Indeterminate="@isLoading" />*@
<div class="container">
    <div class="content">
        <div Class="d-flex justify-space-between py-2 px-1 mt-6" Elevation="0">
            <div class="" mx-2" Elevation="0"></div>
            <MudPaper Class="d-flex mx-2 mud-elevation-22">
                <div id="loginformsize" style="width:380px;">
                    <EditForm Model="@loginViewModel" OnValidSubmit="HandleLogin">
                        <MudCard Elevation="0" Class="py-2">
                            <MudCardContent>
                                <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-2" Color="Color.Primary"><b>Login</b></MudText>
                                @if (ShowErrors == true)
                                {
                                    <MudAlert Severity="Severity.Error" NoIcon="false">@Error</MudAlert>
                                }
                                @if (success)
                                {
                                    <MudText Color="Color.Success">Success</MudText>
                                }
                                else
                                {
                                    <MudText Color="@Color.Error">
                                        <ValidationSummary />
                                    </MudText>
                                }
                                <DataAnnotationsValidator />
                                
                                        <MudTextField Label="Email" Class="mt-3"
                                                      @bind-Value="loginViewModel.Email" For="@(() => loginViewModel.Email)" />
                                        <MudTextField Label="Password" Class="mt-3"
                                                      @bind-Value="loginViewModel.Password" For="@(() => loginViewModel.Password)" InputType="InputType.Password" />
                                     
                                    </MudCardContent>
                            <MudCardActions>
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                            </MudCardActions>
                            <MudText Class="px-2 pb-2" Align="Align.Center"> New User? <MudLink Href="/register" Underline="Underline.Always"><b>Create an account</b></MudLink></MudText>
                        </MudCard>
                    </EditForm>
                </div>
            </MudPaper>
            <div class="mx-2" Elevation="0"></div>
        </div>
    </div>
</div>

@code {
    bool success;
    string[] errors = { };
    private bool ShowErrors;
    private string Error = "";
    LoginViewModel loginViewModel = new LoginViewModel();
    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginViewModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo($"/adminhome/{result.UserId}", forceLoad: true);
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}

