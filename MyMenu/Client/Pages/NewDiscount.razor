@page "/newdiscount"
@layout AdminLayout
@inject ISnackbar Snackbar
@inject IDialogService Dialog

<div class="d-flex justify-center py-2 px-1 mt-9 mb-4">
    <MudText Align="Align.Center" Typo="Typo.h4" Color="Color.Primary">
        <b>
            New Discount
        </b>
    </MudText>
</div>
<div class="d-flex justify-center py-2 px-1 mt-4">
    <MudGrid>
        <MudItem sm="12" md="6">
            <MudPaper Elevation="4" Class="pa-4">
                <MudGrid>
                    <MudItem xs="12">
                        <MudCheckBox T="bool" Color="Color.Primary">
                            Monday
                        </MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox T="bool" Color="Color.Primary">
                            Tuseday
                        </MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox T="bool" Color="Color.Primary">
                            Wednesday
                        </MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox T="bool" Color="Color.Primary">
                            Thursday
                        </MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox T="bool" Color="Color.Primary">
                            Firday
                        </MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox T="bool" Color="Color.Primary">
                            Saturday
                        </MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox T="bool" Color="Color.Primary">
                            Sunday
                        </MudCheckBox>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
        <MudItem sm="12" md="6">
            <MudPaper Elevation="4" Class="pa-4">
                <MudGrid>
                    <MudItem xs="12">
                        <div class="d-inline"><MudText>From:</MudText></div>
                        <div class="d-inline">
                            <MudDatePicker MinDate="@DateTime.Parse(date)" PickerVariant="PickerVariant.Dialog" Label="Date From" @bind-Text=@date />
                        </div>
                    </MudItem>
                    <MudItem xs="12">
                        <div class="d-inline"><MudText>To:</MudText></div>
                        <div class="d-inline">
                            <MudDatePicker MinDate="@DateTime.Parse(date)" PickerVariant="PickerVariant.Dialog" Label="Date To" Text=@date />
                        </div>
                    </MudItem>
                    <MudItem xs="12">
                        <div class="d-inline"><MudText>From:</MudText></div>
                        <div class="d-inline">
                            <MudTimePicker @ref="_picker2" InputIcon="@Icons.Material.Filled.AccessTime" Label="Time From">
                                <PickerActions>
                                    <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker2.Clear())">Clear</MudButton>
                                    <MudButton OnClick="@(() => _picker2.Close(false))">Cancel</MudButton>
                                    <MudButton Color="Color.Primary" OnClick="@(() => _picker2.Close())">Ok</MudButton>
                                </PickerActions>
                            </MudTimePicker>
                        </div>
                    </MudItem>
                    <MudItem xs="12">
                        <div class="d-inline"><MudText>To:</MudText></div>
                        <div class="d-inline">
                            <MudTimePicker @ref="_picker3" InputIcon="@Icons.Material.Filled.AccessTime" Label="Time To">
                                <PickerActions>
                                    <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker3.Clear())">Clear</MudButton>
                                    <MudButton OnClick="@(() => _picker3.Close(false))">Cancel</MudButton>
                                    <MudButton Color="Color.Primary" OnClick="@(() => _picker3.Close())">Ok</MudButton>
                                </PickerActions>
                            </MudTimePicker>
                        </div>
                    </MudItem>
                    <MudItem xs="12">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary">Add Discount</MudButton>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</div>
<MudTable Items="@Companies" Dense="@dense" Hover="@hover" ReadOnly="@ronly" Filter="new Func<Company,bool>(FilterFunc)" @bind-SelectedItem="selectedItem" SortLabel="Sort By" CommitEditTooltip="Commit Edit" OnCommitEditClick="@(() => Snackbar.Add("Commit Edit Handler Invoked"))">
    <ToolBarContent>
        <MudText Typo="Typo.h5" Color="Color.Primary">DISCOUNT LIST</MudText>
        <MudToolBarSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width:10%;" />
        <col style="width:20%" />
        <col style="width:50%;" />
        <col style="width:20%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Company, object>(x=>x.Id)">Company Id</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Company, object>(x=>x.Name)">Company Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Company, object>(x=>x.Description)">Description</MudTableSortLabel></MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd DataLabel="Molar mass"><MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Medium" Class="ma-2"></MudIconButton><MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" Class="ma-2"></MudIconButton></MudTd>
    </RowTemplate>
    @*<RowEditingTemplate>
            <MudTd DataLabel="Nr">@context.Number</MudTd>
            <MudTd DataLabel="Sign">
                <MudTextField @bind-Value="@context.Sign" Required />
            </MudTd>
            <MudTd DataLabel="Name">
                <MudTextField @bind-Value="@context.Name" Required />
            </MudTd>
            <MudTd DataLabel="Position">
                <MudTextField @bind-Value="@context.Position" Required />
            </MudTd>
            <MudTd DataLabel="Molar mass">
                <MudTextField @bind-Value="@context.Molar" Required />
            </MudTd>
        </RowEditingTemplate>*@
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>


@code {
    MudTimePicker _picker;
    MudTimePicker _picker1;
    MudTimePicker _picker2;
    MudTimePicker _picker3;
    string date = DateTime.Now.ToString("yyyy-MM-dd");
    TimeSpan? time = new TimeSpan(00, 45, 00);


    private List<Company> Companies = new List<Company>()
{
        new Company(){ Id = 1, Name="Company A",Description="Company A Description"},
                new Company(){ Id = 2, Name="Company B",Description="Company B Description"},
                new Company(){ Id = 3, Name="Company c",Description="Company C Description"},
                new Company(){ Id = 4, Name="Company d",Description="Company D Description"}
    };
    private bool dense = false;
    private bool hover = true;
    private bool ronly = false;
    private string searchString = "";
    private Company selectedItem = null;

    // Dialog Box
    private bool visible;
    private int rating;
    private void OpenDialog()
    {
        visible = true;
    }
    void Submit() => visible = false;



    private bool FilterFunc(Company company)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (company.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        //if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
        //    return true;
        return false;
    }
}
